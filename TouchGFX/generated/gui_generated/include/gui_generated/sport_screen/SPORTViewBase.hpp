/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SPORTVIEWBASE_HPP
#define SPORTVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/sport_screen/SPORTPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class SPORTViewBase : public touchgfx::View<SPORTPresenter>
{
public:
    SPORTViewBase();
    virtual ~SPORTViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Line line;
    touchgfx::PainterRGB565 linePainter;
    touchgfx::Button setting;
    touchgfx::Button quit;
    touchgfx::TextAreaWithOneWildcard step;
    touchgfx::TextAreaWithOneWildcard Milage;
    touchgfx::TextArea speedTXT;
    touchgfx::TextAreaWithOneWildcard speed;
    touchgfx::TextAreaWithOneWildcard textArea2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t STEP_SIZE = 10;
    touchgfx::Unicode::UnicodeChar stepBuffer[STEP_SIZE];
    static const uint16_t MILAGE_SIZE = 16;
    touchgfx::Unicode::UnicodeChar MilageBuffer[MILAGE_SIZE];
    static const uint16_t SPEED_SIZE = 5;
    touchgfx::Unicode::UnicodeChar speedBuffer[SPEED_SIZE];
    static const uint16_t TEXTAREA2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea2Buffer[TEXTAREA2_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SPORTViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SPORTVIEWBASE_HPP
