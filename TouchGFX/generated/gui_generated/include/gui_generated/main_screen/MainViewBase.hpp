/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/containers/scrollers/ScrollWheel.hpp>
#include <gui/containers/TEST.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase();
    virtual void setupScreen();

    virtual void scrollWheel1UpdateItem(TEST& item, int16_t itemIndex)
    {
        // Override and implement this function in Main
    }
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ClickListener< touchgfx::TextAreaWithTwoWildcards > txt0;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > txt1;
    touchgfx::ClickListener< touchgfx::ScrollWheel > scrollWheel1;
    touchgfx::DrawableListItems<TEST, 5> scrollWheel1ListItems;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::TextArea textArea1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TXT0BUFFER1_SIZE = 30;
    touchgfx::Unicode::UnicodeChar txt0Buffer1[TXT0BUFFER1_SIZE];
    static const uint16_t TXT0BUFFER2_SIZE = 30;
    touchgfx::Unicode::UnicodeChar txt0Buffer2[TXT0BUFFER2_SIZE];
    static const uint16_t TXT1_SIZE = 30;
    touchgfx::Unicode::UnicodeChar txt1Buffer[TXT1_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // MAINVIEWBASE_HPP
