/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CAMVIEWBASE_HPP
#define CAMVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/cam_screen/CAMPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/scrollers/ScrollWheel.hpp>
#include <gui/containers/GNSS.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class CAMViewBase : public touchgfx::View<CAMPresenter>
{
public:
    CAMViewBase();
    virtual ~CAMViewBase();
    virtual void setupScreen();

    virtual void spetialUpdateItem(GNSS& item, int16_t itemIndex)
    {
        // Override and implement this function in CAM
    }

    /*
     * Virtual Action Handlers
     */
    virtual void up_button()
    {
        // Override and implement this function in CAM
    }
    virtual void dwon_button()
    {
        // Override and implement this function in CAM
    }
    virtual void left_button()
    {
        // Override and implement this function in CAM
    }
    virtual void right_button()
    {
        // Override and implement this function in CAM
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box back;
    touchgfx::Line line;
    touchgfx::PainterRGB565 linePainter;
    touchgfx::Button quit;
    touchgfx::Button down;
    touchgfx::Button up;
    touchgfx::Button right;
    touchgfx::Button left;
    touchgfx::Button setting;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::ScrollWheel spetial;
    touchgfx::DrawableListItems<GNSS, 4> spetialListItems;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea wait_txt;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CAMViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    touchgfx::Callback<CAMViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // CAMVIEWBASE_HPP
