/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef LOCATVIEWBASE_HPP
#define LOCATVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/locat_screen/LOCATPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/scrollers/ScrollWheel.hpp>
#include <gui/containers/GNSS.hpp>

class LOCATViewBase : public touchgfx::View<LOCATPresenter>
{
public:
    LOCATViewBase();
    virtual ~LOCATViewBase();
    virtual void setupScreen();

    virtual void scrollWheel1UpdateItem(GNSS& item, int16_t itemIndex)
    {
        // Override and implement this function in LOCAT
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::Line line;
    touchgfx::PainterRGB565 linePainter;
    touchgfx::Button quit;
    touchgfx::Image satellite;
    touchgfx::TextAreaWithOneWildcard satellite_num;
    touchgfx::TextAreaWithOneWildcard Alt;
    touchgfx::TextAreaWithTwoWildcards Lat;
    touchgfx::TextAreaWithTwoWildcards Lon;
    touchgfx::TextAreaWithOneWildcard PDOP;
    touchgfx::TextAreaWithOneWildcard MODE;
    touchgfx::ScrollWheel scrollWheel1;
    touchgfx::DrawableListItems<GNSS, 4> scrollWheel1ListItems;
    touchgfx::TextAreaWithOneWildcard KMPH;
    touchgfx::Image image1;
    touchgfx::Image image2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SATELLITE_NUM_SIZE = 3;
    touchgfx::Unicode::UnicodeChar satellite_numBuffer[SATELLITE_NUM_SIZE];
    static const uint16_t ALT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar AltBuffer[ALT_SIZE];
    static const uint16_t LATBUFFER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar LatBuffer1[LATBUFFER1_SIZE];
    static const uint16_t LATBUFFER2_SIZE = 2;
    touchgfx::Unicode::UnicodeChar LatBuffer2[LATBUFFER2_SIZE];
    static const uint16_t LONBUFFER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar LonBuffer1[LONBUFFER1_SIZE];
    static const uint16_t LONBUFFER2_SIZE = 2;
    touchgfx::Unicode::UnicodeChar LonBuffer2[LONBUFFER2_SIZE];
    static const uint16_t PDOP_SIZE = 5;
    touchgfx::Unicode::UnicodeChar PDOPBuffer[PDOP_SIZE];
    static const uint16_t MODE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar MODEBuffer[MODE_SIZE];
    static const uint16_t KMPH_SIZE = 10;
    touchgfx::Unicode::UnicodeChar KMPHBuffer[KMPH_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<LOCATViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    touchgfx::Callback<LOCATViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // LOCATVIEWBASE_HPP
