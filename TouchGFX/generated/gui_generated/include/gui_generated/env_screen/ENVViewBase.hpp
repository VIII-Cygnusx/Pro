/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ENVVIEWBASE_HPP
#define ENVVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/env_screen/ENVPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class ENVViewBase : public touchgfx::View<ENVPresenter>
{
public:
    ENVViewBase();
    virtual ~ENVViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Line line;
    touchgfx::PainterRGB565 linePainter;
    touchgfx::Button quit;
    touchgfx::TextArea textArea1;
    touchgfx::TextAreaWithOneWildcard WET;
    touchgfx::TextAreaWithOneWildcard LIGHT;
    touchgfx::TextAreaWithOneWildcard TEM;

    /*
     * Wildcard Buffers
     */
    static const uint16_t WET_SIZE = 13;
    touchgfx::Unicode::UnicodeChar WETBuffer[WET_SIZE];
    static const uint16_t LIGHT_SIZE = 13;
    touchgfx::Unicode::UnicodeChar LIGHTBuffer[LIGHT_SIZE];
    static const uint16_t TEM_SIZE = 13;
    touchgfx::Unicode::UnicodeChar TEMBuffer[TEM_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ENVViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // ENVVIEWBASE_HPP
