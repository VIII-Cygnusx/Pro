/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/env_screen/ENVViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ENVViewBase::ENVViewBase() :
    buttonCallback(this, &ENVViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    line.setPosition(10, 179, 301, 33);
    linePainter.setColor(touchgfx::Color::getColorFromRGB(255, 170, 0));
    line.setPainter(linePainter);
    line.setStart(0, 0);
    line.setEnd(300, 0);
    line.setLineWidth(10);
    line.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line);

    quit.setXY(265, 189);
    quit.setBitmaps(touchgfx::Bitmap(BITMAP_BIG_QUIT_ID), touchgfx::Bitmap(BITMAP_BIG_QUIT_ID));
    quit.setAction(buttonCallback);
    add(quit);

    textArea1.setXY(0, 0);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2LI4));
    add(textArea1);

    WET.setXY(10, 155);
    WET.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    WET.setLinespacing(0);
    Unicode::snprintf(WETBuffer, WET_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1HTS).getText());
    WET.setWildcard(WETBuffer);
    WET.resizeToCurrentText();
    WET.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOCS));
    add(WET);

    LIGHT.setXY(10, 131);
    LIGHT.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LIGHT.setLinespacing(0);
    Unicode::snprintf(LIGHTBuffer, LIGHT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3JAA).getText());
    LIGHT.setWildcard(LIGHTBuffer);
    LIGHT.resizeToCurrentText();
    LIGHT.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TWDD));
    add(LIGHT);

    TEM.setXY(10, 107);
    TEM.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TEM.setLinespacing(0);
    Unicode::snprintf(TEMBuffer, TEM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FZQW).getText());
    TEM.setWildcard(TEMBuffer);
    TEM.resizeToCurrentText();
    TEM.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9E4A));
    add(TEM);
}

ENVViewBase::~ENVViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void ENVViewBase::setupScreen()
{

}

void ENVViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &quit)
    {
        //Main
        //When quit clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
}
