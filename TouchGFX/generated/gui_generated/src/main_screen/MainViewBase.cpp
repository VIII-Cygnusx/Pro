/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

MainViewBase::MainViewBase() :
    updateItemCallback(this, &MainViewBase::updateItemCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    txt0.setXY(131, 108);
    txt0.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txt0.setLinespacing(0);
    touchgfx::Unicode::snprintf(txt0Buffer1, TXT0BUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_26C1).getText());
    txt0.setWildcard1(txt0Buffer1);
    touchgfx::Unicode::snprintf(txt0Buffer2, TXT0BUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UHLW).getText());
    txt0.setWildcard2(txt0Buffer2);
    txt0.resizeToCurrentText();
    txt0.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M6V5));
    add(txt0);

    txt1.setXY(131, 132);
    txt1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txt1.setLinespacing(0);
    Unicode::snprintf(txt1Buffer, TXT1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YEWN).getText());
    txt1.setWildcard(txt1Buffer);
    txt1.resizeToCurrentText();
    txt1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05U6));
    add(txt1);

    scrollWheel1.setPosition(40, 0, 320, 240);
    scrollWheel1.setHorizontal(false);
    scrollWheel1.setCircular(true);
    scrollWheel1.setEasingEquation(touchgfx::EasingEquations::elasticEaseOut);
    scrollWheel1.setSwipeAcceleration(5);
    scrollWheel1.setDragAcceleration(5);
    scrollWheel1.setNumberOfItems(10);
    scrollWheel1.setSelectedItemOffset(0);
    scrollWheel1.setOvershootPercentage(10);
    scrollWheel1.setDrawableSize(75, 0);
    scrollWheel1.setDrawables(scrollWheel1ListItems, updateItemCallback);
    scrollWheel1.animateToItem(0, 0);
    add(scrollWheel1);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BALL_ID));
    scalableImage1.setPosition(0, 210, 30, 30);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    line1.setPosition(32, 210, 28, 30);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 170, 0));
    line1.setPainter(line1Painter);
    line1.setStart(0, 0);
    line1.setEnd(0, 36);
    line1.setLineWidth(10);
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1);

    textArea1.setXY(39, 210);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KD51));
    add(textArea1);
}

MainViewBase::~MainViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MainViewBase::setupScreen()
{
    scrollWheel1.initialize();
    for (int i = 0; i < scrollWheel1ListItems.getNumberOfDrawables(); i++)
    {
        scrollWheel1ListItems[i].initialize();
    }
}

void MainViewBase::handleKeyEvent(uint8_t key)
{
    if(0 == key)
    {
        //COMPASS
        //When hardware button 0 clicked change screen to COMPASS
        //Go to COMPASS with screen transition towards East
        application().gotoCOMPASSScreenCoverTransitionEast();
    
    }

    if(1 == key)
    {
        //TIMER
        //When hardware button 1 clicked change screen to TIMER
        //Go to TIMER with screen transition towards East
        application().gotoTIMERScreenCoverTransitionEast();
    
    }

    if(2 == key)
    {
        //IMU
        //When hardware button 2 clicked change screen to IMU
        //Go to IMU with screen transition towards East
        application().gotoIMUScreenCoverTransitionEast();
    
    }

    if(3 == key)
    {
        //LOCAT
        //When hardware button 3 clicked change screen to LOCAT
        //Go to LOCAT with screen transition towards East
        application().gotoLOCATScreenCoverTransitionEast();
    
    }

    if(4 == key)
    {
        //SYSTEM
        //When hardware button 4 clicked change screen to SYSTEM
        //Go to SYSTEM with screen transition towards East
        application().gotoSYSTEMScreenCoverTransitionEast();
    
    }

    if(5 == key)
    {
        //CAM
        //When hardware button 5 clicked change screen to CAM
        //Go to CAM with screen transition towards East
        application().gotoCAMScreenCoverTransitionEast();
    
    }

    if(6 == key)
    {
        //SPORT
        //When hardware button 6 clicked change screen to SPORT
        //Go to SPORT with screen transition towards East
        application().gotoSPORTScreenCoverTransitionEast();
    
    }

    if(7 == key)
    {
        //HEALTH
        //When hardware button 7 clicked change screen to HEALTH
        //Go to HEALTH with screen transition towards East
        application().gotoHEALTHScreenCoverTransitionEast();
    
    }

    if(8 == key)
    {
        //ENV
        //When hardware button 8 clicked change screen to ENV
        //Go to ENV with screen transition towards East
        application().gotoENVScreenCoverTransitionEast();
    
    }

    if(9 == key)
    {
        //GAME
        //When hardware button 9 clicked change screen to GAME
        //Go to GAME with screen transition towards East
        application().gotoGAMEScreenCoverTransitionEast();
    
    }
}

void MainViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollWheel1ListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        TEST* cc = (TEST*)d;
        scrollWheel1UpdateItem(*cc, itemIndex);
    }
}
