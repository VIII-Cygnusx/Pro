/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/locat_screen/LOCATViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

LOCATViewBase::LOCATViewBase() :
    updateItemCallback(this, &LOCATViewBase::updateItemCallbackHandler),
    buttonCallback(this, &LOCATViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_DUIWAI_ID));
    scalableImage1.setPosition(0, 24, 320, 155);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    line.setPosition(10, 179, 301, 33);
    linePainter.setColor(touchgfx::Color::getColorFromRGB(255, 170, 0));
    line.setPainter(linePainter);
    line.setStart(0, 0);
    line.setEnd(300, 0);
    line.setLineWidth(10);
    line.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line);

    quit.setXY(265, 189);
    quit.setBitmaps(touchgfx::Bitmap(BITMAP_BIG_QUIT_ID), touchgfx::Bitmap(BITMAP_BIG_QUIT_ID));
    quit.setAction(buttonCallback);
    add(quit);

    satellite.setXY(0, 6);
    satellite.setBitmap(touchgfx::Bitmap(BITMAP_SATT_ID));
    add(satellite);

    satellite_num.setXY(13, 0);
    satellite_num.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    satellite_num.setLinespacing(0);
    Unicode::snprintf(satellite_numBuffer, SATELLITE_NUM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OTF4).getText());
    satellite_num.setWildcard(satellite_numBuffer);
    satellite_num.resizeToCurrentText();
    satellite_num.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6CT4));
    add(satellite_num);

    Alt.setXY(0, 72);
    Alt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Alt.setLinespacing(0);
    Unicode::snprintf(AltBuffer, ALT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CKNZ).getText());
    Alt.setWildcard(AltBuffer);
    Alt.resizeToCurrentText();
    Alt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H3YX));
    add(Alt);

    Lat.setXY(-1, 48);
    Lat.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Lat.setLinespacing(0);
    touchgfx::Unicode::snprintf(LatBuffer1, LATBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I4Q8).getText());
    Lat.setWildcard1(LatBuffer1);
    touchgfx::Unicode::snprintf(LatBuffer2, LATBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OUNT).getText());
    Lat.setWildcard2(LatBuffer2);
    Lat.resizeToCurrentText();
    Lat.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NDQ3));
    add(Lat);

    Lon.setXY(0, 24);
    Lon.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Lon.setLinespacing(0);
    touchgfx::Unicode::snprintf(LonBuffer1, LONBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SBMK).getText());
    Lon.setWildcard1(LonBuffer1);
    touchgfx::Unicode::snprintf(LonBuffer2, LONBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_L2LC).getText());
    Lon.setWildcard2(LonBuffer2);
    Lon.resizeToCurrentText();
    Lon.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SUJL));
    add(Lon);

    PDOP.setXY(40, 12);
    PDOP.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    PDOP.setLinespacing(0);
    Unicode::snprintf(PDOPBuffer, PDOP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_L82I).getText());
    PDOP.setWildcard(PDOPBuffer);
    PDOP.resizeToCurrentText();
    PDOP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QJVX));
    add(PDOP);

    MODE.setXY(40, 0);
    MODE.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    MODE.setLinespacing(0);
    Unicode::snprintf(MODEBuffer, MODE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0AOZ).getText());
    MODE.setWildcard(MODEBuffer);
    MODE.resizeToCurrentText();
    MODE.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5326));
    add(MODE);

    scrollWheel1.setPosition(23, 185, 56, 55);
    scrollWheel1.setHorizontal(false);
    scrollWheel1.setCircular(true);
    scrollWheel1.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollWheel1.setSwipeAcceleration(10);
    scrollWheel1.setDragAcceleration(10);
    scrollWheel1.setNumberOfItems(6);
    scrollWheel1.setSelectedItemOffset(0);
    scrollWheel1.setOvershootPercentage(0);
    scrollWheel1.setDrawableSize(18, 0);
    scrollWheel1.setDrawables(scrollWheel1ListItems, updateItemCallback);
    scrollWheel1.animateToItem(0, 0);
    add(scrollWheel1);

    KMPH.setXY(211, 0);
    KMPH.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    KMPH.setLinespacing(0);
    Unicode::snprintf(KMPHBuffer, KMPH_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_C72L).getText());
    KMPH.setWildcard(KMPHBuffer);
    KMPH.resizeToCurrentText();
    KMPH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GHHD));
    add(KMPH);

    image1.setXY(10, 205);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_START_ID));
    add(image1);

    image2.setXY(106, 76);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_RING_ID));
    add(image2);
}

LOCATViewBase::~LOCATViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void LOCATViewBase::setupScreen()
{
    scrollWheel1.initialize();
    for (int i = 0; i < scrollWheel1ListItems.getNumberOfDrawables(); i++)
    {
        scrollWheel1ListItems[i].initialize();
    }
}

void LOCATViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &quit)
    {
        //Main
        //When quit clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
}

void LOCATViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollWheel1ListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        GNSS* cc = (GNSS*)d;
        scrollWheel1UpdateItem(*cc, itemIndex);
    }
}
