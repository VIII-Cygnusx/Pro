/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/compass_screen/COMPASSViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

COMPASSViewBase::COMPASSViewBase() :
    buttonCallback(this, &COMPASSViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    line.setPosition(10, 179, 301, 33);
    linePainter.setColor(touchgfx::Color::getColorFromRGB(255, 170, 0));
    line.setPainter(linePainter);
    line.setStart(0, 0);
    line.setEnd(300, 0);
    line.setLineWidth(10);
    line.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line);

    quit.setXY(265, 189);
    quit.setBitmaps(touchgfx::Bitmap(BITMAP_BIG_QUIT_ID), touchgfx::Bitmap(BITMAP_BIG_QUIT_ID));
    quit.setAction(buttonCallback);
    add(quit);

    textArea1.setXY(0, 0);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_44OO));
    add(textArea1);

    compass.setBackground(touchgfx::Bitmap(BITMAP_BIG_RING_ID));
    compass.setPosition(138, 66, 50, 50);
    compass.setCenter(25, 25);
    compass.setStartEndAngle(0, 360);
    compass.setRange(0, 360);
    compass.setValue(0);
    compass.setNeedle(BITMAP_BIG_POINTER_ID, 25.0f, 24.6f);
    compass.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    compass.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(compass);

    textArea2.setXY(142, 45);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IBP7));
    add(textArea2);

    textArea2_3.setXY(142, 116);
    textArea2_3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2_3.setLinespacing(0);
    textArea2_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CAFU));
    add(textArea2_3);

    textArea2_2.setXY(188, 83);
    textArea2_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2_2.setLinespacing(0);
    textArea2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZGA8));
    add(textArea2_2);

    textArea2_1.setXY(98, 83);
    textArea2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2_1.setLinespacing(0);
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3GFM));
    add(textArea2_1);
}

COMPASSViewBase::~COMPASSViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void COMPASSViewBase::setupScreen()
{

}

void COMPASSViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &quit)
    {
        //Main
        //When quit clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
}
