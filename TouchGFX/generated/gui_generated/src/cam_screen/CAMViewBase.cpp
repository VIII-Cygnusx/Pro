/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/cam_screen/CAMViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

CAMViewBase::CAMViewBase() :
    updateItemCallback(this, &CAMViewBase::updateItemCallbackHandler),
    buttonCallback(this, &CAMViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    back.setPosition(0, 0, 320, 240);
    back.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(back);

    line.setPosition(10, 179, 301, 33);
    linePainter.setColor(touchgfx::Color::getColorFromRGB(255, 170, 0));
    line.setPainter(linePainter);
    line.setStart(0, 0);
    line.setEnd(300, 0);
    line.setLineWidth(10);
    line.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line);

    quit.setXY(275, 195);
    quit.setBitmaps(touchgfx::Bitmap(BITMAP_BIG_QUIT_ID), touchgfx::Bitmap(BITMAP_BIG_QUIT_ID));
    quit.setAction(buttonCallback);
    add(quit);

    down.setXY(36, 72);
    down.setBitmaps(touchgfx::Bitmap(BITMAP_BIG_DOWN_ID), touchgfx::Bitmap(BITMAP_BIG_DOWN_ID));
    down.setAction(buttonCallback);
    add(down);

    up.setXY(36, 0);
    up.setBitmaps(touchgfx::Bitmap(BITMAP_BIG_UP_ID), touchgfx::Bitmap(BITMAP_BIG_UP_ID));
    up.setAction(buttonCallback);
    add(up);

    right.setXY(72, 36);
    right.setBitmaps(touchgfx::Bitmap(BITMAP_BIG_RIGHT_ID), touchgfx::Bitmap(BITMAP_BIG_RIGHT_ID));
    right.setAction(buttonCallback);
    add(right);

    left.setXY(0, 36);
    left.setBitmaps(touchgfx::Bitmap(BITMAP_BIG_QUIT_ID), touchgfx::Bitmap(BITMAP_BIG_QUIT_ID));
    left.setAction(buttonCallback);
    add(left);

    setting.setXY(11, 195);
    setting.setBitmaps(touchgfx::Bitmap(BITMAP_MEAU_BIG_ID), touchgfx::Bitmap(BITMAP_MEAU_BIG_ID));
    setting.setAction(buttonCallback);
    add(setting);

    line1.setPosition(12, 143, 53, 10);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(0, 0);
    line1.setEnd(53, 0);
    line1.setLineWidth(2);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1);

    spetial.setPosition(10, 126, 56, 53);
    spetial.setHorizontal(false);
    spetial.setCircular(true);
    spetial.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    spetial.setSwipeAcceleration(10);
    spetial.setDragAcceleration(10);
    spetial.setNumberOfItems(10);
    spetial.setSelectedItemOffset(0);
    spetial.setOvershootPercentage(75);
    spetial.setDrawableSize(18, 0);
    spetial.setDrawables(spetialListItems, updateItemCallback);
    spetial.animateToItem(0, 0);
    add(spetial);

    textArea2.setXY(19, 114);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_89H0));
    add(textArea2);

    wait_txt.setXY(97, 86);
    wait_txt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    wait_txt.setLinespacing(0);
    wait_txt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y3XZ));
    add(wait_txt);
}

CAMViewBase::~CAMViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void CAMViewBase::setupScreen()
{
    spetial.initialize();
    for (int i = 0; i < spetialListItems.getNumberOfDrawables(); i++)
    {
        spetialListItems[i].initialize();
    }
}

void CAMViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &quit)
    {
        //Main
        //When quit clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
    }
    if (&src == &up)
    {
        //UP
        //When up clicked call virtual function
        //Call up_button
        up_button();
    }
    if (&src == &down)
    {
        //DOWN
        //When down clicked call virtual function
        //Call dwon_button
        dwon_button();
    }
    if (&src == &left)
    {
        //LEFT
        //When left clicked call virtual function
        //Call left_button
        left_button();
    }
    if (&src == &right)
    {
        //RIGHT
        //When right clicked call virtual function
        //Call right_button
        right_button();
    }
    if (&src == &setting)
    {
        //setting
        //When setting clicked change screen to CAM_setting
        //Go to CAM_setting with no screen transition
        application().gotoCAM_settingScreenNoTransition();
    }
}

void CAMViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &spetialListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        GNSS* cc = (GNSS*)d;
        spetialUpdateItem(*cc, itemIndex);
    }
}
