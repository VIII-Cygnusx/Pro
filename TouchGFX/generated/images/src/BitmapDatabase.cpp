// 4.24.0 0x03a3fa52
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_alternate_theme_images_containers_small_wide_dark[]; // BITMAP_ALTERNATE_THEME_IMAGES_CONTAINERS_SMALL_WIDE_DARK_ID = 0, Size: 214x150 pixels
extern const unsigned char image_ball[]; // BITMAP_BALL_ID = 1, Size: 100x100 pixels
extern const unsigned char image_big_down[]; // BITMAP_BIG_DOWN_ID = 2, Size: 36x36 pixels
extern const unsigned char image_big_pointer[]; // BITMAP_BIG_POINTER_ID = 3, Size: 50x50 pixels
extern const unsigned char image_big_quit[]; // BITMAP_BIG_QUIT_ID = 4, Size: 36x36 pixels
extern const unsigned char image_big_right[]; // BITMAP_BIG_RIGHT_ID = 5, Size: 36x36 pixels
extern const unsigned char image_big_ring[]; // BITMAP_BIG_RING_ID = 6, Size: 50x50 pixels
extern const unsigned char image_big_up[]; // BITMAP_BIG_UP_ID = 7, Size: 36x36 pixels
extern const unsigned char image_big_void[]; // BITMAP_BIG_VOID_ID = 8, Size: 240x240 pixels
extern const unsigned char image_black_ring[]; // BITMAP_BLACK_RING_ID = 9, Size: 17x16 pixels
extern const unsigned char image_cam[]; // BITMAP_CAM_ID = 10, Size: 36x36 pixels
extern const unsigned char image_clock[]; // BITMAP_CLOCK_ID = 11, Size: 40x40 pixels
extern const unsigned char image_compass[]; // BITMAP_COMPASS_ID = 12, Size: 36x36 pixels
extern const unsigned char image_cycle[]; // BITMAP_CYCLE_ID = 13, Size: 41x24 pixels
extern const unsigned char image_down[]; // BITMAP_DOWN_ID = 14, Size: 15x15 pixels
extern const unsigned char image_duiwai[]; // BITMAP_DUIWAI_ID = 15, Size: 390x342 pixels
extern const unsigned char image_empty[]; // BITMAP_EMPTY_ID = 16, Size: 50x50 pixels
extern const unsigned char image_env[]; // BITMAP_ENV_ID = 17, Size: 36x36 pixels
extern const unsigned char image_game[]; // BITMAP_GAME_ID = 18, Size: 36x36 pixels
extern const unsigned char image_health[]; // BITMAP_HEALTH_ID = 19, Size: 36x36 pixels
extern const unsigned char image_imu[]; // BITMAP_IMU_ID = 20, Size: 36x41 pixels
extern const unsigned char image_joy1[]; // BITMAP_JOY1_ID = 21, Size: 100x100 pixels
extern const unsigned char image_joy2[]; // BITMAP_JOY2_ID = 22, Size: 100x100 pixels
extern const unsigned char image_joy3[]; // BITMAP_JOY3_ID = 23, Size: 100x100 pixels
extern const unsigned char image_left[]; // BITMAP_LEFT_ID = 24, Size: 13x15 pixels
extern const unsigned char image_map_locat[]; // BITMAP_MAP_LOCAT_ID = 25, Size: 36x38 pixels
extern const unsigned char image_meau[]; // BITMAP_MEAU_ID = 26, Size: 16x14 pixels
extern const unsigned char image_meau_big[]; // BITMAP_MEAU_BIG_ID = 27, Size: 36x36 pixels
extern const unsigned char image_paused[]; // BITMAP_PAUSED_ID = 28, Size: 12x12 pixels
extern const unsigned char image_s1[]; // BITMAP_S1_ID = 29, Size: 100x100 pixels
extern const unsigned char image_satt[]; // BITMAP_SATT_ID = 30, Size: 13x13 pixels
extern const unsigned char image_setting[]; // BITMAP_SETTING_ID = 31, Size: 36x36 pixels
extern const unsigned char image_standby[]; // BITMAP_STANDBY_ID = 32, Size: 100x100 pixels
extern const unsigned char image_start[]; // BITMAP_START_ID = 33, Size: 13x15 pixels
extern const unsigned char image_start_new[]; // BITMAP_START_NEW_ID = 34, Size: 12x12 pixels
extern const unsigned char image_stop[]; // BITMAP_STOP_ID = 35, Size: 12x12 pixels
extern const unsigned char image_sys[]; // BITMAP_SYS_ID = 36, Size: 36x36 pixels
extern const unsigned char image_timer[]; // BITMAP_TIMER_ID = 37, Size: 36x36 pixels
extern const unsigned char image_up[]; // BITMAP_UP_ID = 38, Size: 15x15 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_alternate_theme_images_containers_small_wide_dark, 0, 214, 150, 4, 2, 206, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 146, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_ball, 0, 100, 100, 49, 0, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 100, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_big_down, 0, 36, 36, 9, 2, 18, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 17, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_big_pointer, 0, 50, 50, 31, 20, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 7, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_big_quit, 0, 36, 36, 17, 9, 17, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 18, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_big_right, 0, 36, 36, 2, 9, 18, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 17, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_big_ring, 0, 50, 50, 2, 19, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 11, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_big_up, 0, 36, 36, 9, 17, 18, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 17, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_big_void, 0, 240, 240, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_black_ring, 0, 17, 16, 15, 11, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cam, 0, 36, 36, 33, 6, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 23, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_clock, 0, 40, 40, 14, 5, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_compass, 0, 36, 36, 12, 1, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cycle, 0, 41, 24, 14, 4, 16, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_down, 0, 15, 15, 3, 2, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_duiwai, 0, 390, 342, 0, 0, 390, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 342, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_empty, 0, 50, 50, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_env, 0, 36, 36, 5, 30, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_game, 0, 36, 36, 4, 14, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_health, 0, 36, 36, 26, 19, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_imu, 0, 36, 41, 13, 33, 16, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_joy1, 0, 100, 100, 42, 21, 48, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 53, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_joy2, 0, 100, 100, 39, 17, 40, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 64, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_joy3, 0, 100, 100, 19, 22, 49, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 48, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_left, 0, 13, 15, 6, 3, 7, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_map_locat, 0, 36, 38, 5, 35, 25, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_meau, 0, 16, 14, 1, 11, 14, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_meau_big, 0, 36, 36, 4, 28, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_paused, 0, 12, 12, 8, 1, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_s1, 0, 100, 100, 37, 19, 49, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 49, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_satt, 0, 13, 13, 9, 2, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_setting, 0, 36, 36, 32, 13, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_standby, 0, 100, 100, 48, 13, 34, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 68, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_start, 0, 13, 15, 0, 3, 7, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_start_new, 0, 12, 12, 1, 3, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_stop, 0, 12, 12, 1, 0, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_sys, 0, 36, 36, 2, 33, 13, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_timer, 0, 36, 36, 17, 5, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 13, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_up, 0, 15, 15, 3, 9, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
